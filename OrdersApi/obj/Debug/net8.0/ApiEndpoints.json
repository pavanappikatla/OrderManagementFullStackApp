[
  {
    "ContainingType": "OrdersApi.Controllers.OrdersController",
    "Method": "UploadFileToServer",
    "RelativePath": "api/Orders/copy-file-to-server",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FileBytes",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "FileType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PONumber",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "JobNo",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Order_Header_ID",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Order_Detail_ID",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "DocumentType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "UserText",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "OrdersApi.ResponseModel.FileUploadResponseModel",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "OrdersApi.Controllers.OrdersController",
    "Method": "GetDocumentTypes",
    "RelativePath": "api/Orders/documenttype",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "OrdersApi.Controllers.OrdersController",
    "Method": "DownloadFile",
    "RelativePath": "api/Orders/download-file/{fileName}/{poNum}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fileName",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "poNum",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "OrdersApi.Controllers.OrdersController",
    "Method": "GetFilesFromDirectory",
    "RelativePath": "api/Orders/get-files-from-directory/{PO}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "PO",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "OrdersApi.Controllers.OrdersController",
    "Method": "GetOpenOrders",
    "RelativePath": "api/Orders/open-orders-get",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "OrdersApi.RequestModels.OrdersRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "OrdersApi.Controllers.OrdersController",
    "Method": "TestApi",
    "RelativePath": "api/Orders/test",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "OrdersApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[OrdersApi.WeatherForecast, OrdersApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]